[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "conversational-crm"
version = "0.1.0"
description = "智能对话式CRM系统 - 基于多Agent架构的客户关系管理平台"
readme = "README.md"
license = {file = "LICENSE"}
authors = [
    {name = "CRM Team", email = "team@crm.com"}
]
maintainers = [
    {name = "CRM Team", email = "team@crm.com"}
]
keywords = ["crm", "ai", "agents", "conversation", "sales"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: End Users/Desktop",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Office/Business",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]
requires-python = ">=3.11"

dependencies = [
    # Web框架
    "fastapi>=0.104.0",
    "uvicorn[standard]>=0.24.0",
    "pydantic>=2.5.0",
    "pydantic-settings>=2.1.0",
    
    # 数据库
    "sqlalchemy>=2.0.23",
    "asyncpg>=0.29.0",
    "alembic>=1.13.0",
    "redis>=5.0.1",
    
    # AI/ML核心
    "langchain>=0.1.0",
    "langchain-core>=0.1.0",
    "langchain-community>=0.0.10",
    "langgraph>=0.0.20",
    "openai>=1.6.0",
    
    # 向量数据库和嵌入
    "qdrant-client>=1.7.0",
    "sentence-transformers>=2.2.2",
    "FlagEmbedding>=1.2.0",
    
    # 文档处理和RAG
    "llama-index>=0.9.0",
    "llama-index-vector-stores-qdrant>=0.1.0",
    "pypdf>=3.17.0",
    "python-docx>=1.1.0",
    "python-multipart>=0.0.6",
    
    # 中文处理
    "jieba>=0.42.1",
    "zhipuai>=2.0.0",
    
    # 消息队列和通信
    "aio-pika>=9.3.0",
    "websockets>=12.0",
    
    # 工具和实用程序
    "httpx>=0.26.0",
    "aiofiles>=23.2.1",
    "python-jose[cryptography]>=3.3.0",
    "passlib[bcrypt]>=1.7.4",
    "python-dateutil>=2.8.2",
    "pytz>=2023.3",
    
    # 监控和日志
    "structlog>=23.2.0",
    "prometheus-client>=0.19.0",
    
    # 配置和环境
    "python-dotenv>=1.0.0",
    "click>=8.1.7",
    "rich>=13.7.0",
]

[project.optional-dependencies]
dev = [
    # 测试
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.1.0",
    "pytest-mock>=3.12.0",
    "httpx>=0.26.0",  # for testing
    
    # 代码质量
    "black>=23.12.0",
    "isort>=5.13.0",
    "flake8>=6.1.0",
    "mypy>=1.8.0",
    "pre-commit>=3.6.0",
    
    # 文档
    "mkdocs>=1.5.0",
    "mkdocs-material>=9.5.0",
    "mkdocstrings[python]>=0.24.0",
]

production = [
    # 生产环境额外依赖
    "gunicorn>=21.2.0",
    "sentry-sdk[fastapi]>=1.39.0",
    "newrelic>=9.4.0",
]

deployment = [
    # 部署工具
    "docker>=6.1.0",
    "kubernetes>=28.1.0",
]

[project.urls]
Homepage = "https://github.com/company/conversational-crm"
Documentation = "https://docs.crm.com"
Repository = "https://github.com/company/conversational-crm.git"
Issues = "https://github.com/company/conversational-crm/issues"

[project.scripts]
crm-server = "src.main:main"
crm-cli = "src.cli:main"


[tool.black]
line-length = 100
target-version = ['py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
line_length = 100
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "qdrant_client.*",
    "sentence_transformers.*",
    "FlagEmbedding.*",
    "llama_index.*",
    "jieba.*",
    "aio_pika.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
    "asyncio: marks tests as async tests",
]
asyncio_mode = "auto"
filterwarnings = [
    "ignore::DeprecationWarning",
    "ignore::PendingDeprecationWarning",
]

[tool.coverage.run]
source = ["src"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "*/migrations/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.ruff]
target-version = "py311"
line-length = 100
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.hatch.build.targets.wheel]
packages = ["src"]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]
"tests/*" = ["B011"]